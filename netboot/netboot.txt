== Бездисковая загрузка для тысяч серверов ==

=== Зачем? ===

Большой парк постоянно нагруженных серверов требует особого подхода. Их
регулярно нужно мониторить, проверять доступность, восстанавливать. Иногда,
что самое страшное, их нужно обновлять. Например, к 2011 году у нас было
несколько тысяч серверов с 32-битныи ядром, от использования которого хотелось
как можно быстрее отказаться.

==== Задачи ====
Сетевой загрузкой мы хотели решить несколько задач:
* Восстановление доступности к данным любого сервера
* Обновление ядра и системных библиотек на сервере
* Настройка нового сервера
Все задачи хотелось решать быстро — в идеале, с одной перезагрузкой.

==== Disclaimer ====
Все описанное относится к ОС GNU/Linux. Мы использовали Debian — впрочем, 
для других дистрибутивов все устроено аналогично.

=== Ликбез ===

==== Загрузка ====
Сначала мы вспомнили, как именно происходит загрузка:
* BIOS выбирает загрузочное устройство: HDD, CD, сеть
* С устройства берется загрузчик: например, grub
* Загрузчик тоже выбирает устройство и загружает ядро
* Ядро загружает начальную файловую систему (initramfs)
* initramfs с помощью init или systemd монтирует необходмые разделы,
поднимает сетевые интерфейсы и завершает загрузку

==== initramfs ====
Начальная файловая система решает проблему курицы и яйца для системы, где любой
раздел любого диска нужно куда-то монтировать. Это небольшой архив, который
становится корневым разделом. В нем обычно есть несколько необходимых для
загрузки утилит: например, mount.

==== PXE ====
Preboot eXecution Environment позволяет использовать сеть для получения
загрузчика:
* Сервер делает DHCP-запрос
* DHCP-сервер выдает динамический адрес и путь к загрузчику
* Сервер по протоколу TFTP скачивает загрузчик и запускает его

=== Серверная часть ===

==== DHCP ====
DHCP-сервер, очевидно, у нас уже был. Для наших целей подошел бы практически
любой, умеющий отдавать TFTP-адрес для PXE. Например, для dhcpcd конфигурация
может выглядеть так:

TODO: кусок конфига

Если вы хотите просто получить адрес, а не грузиться по сети, ваш DHCP-клиент,
скорее всего, спокойно проигнорирует эту часть ответа.

==== TFTP ====
TFTP использует в качестве транспорта UDP, поэтому:
* Нужно не забыть открыть 69 порт по UDP в iptables/ipfw и на коммутаторах
* Не стоит раздавать с его помощью большие файлы — любая потеря пакета кртична

Мы использовали tftpd

TODO: что-то еще про tftpd

==== HTTP ====
HTTP использовался для получения полноценной системы.
* Позволяет без проблем скачать сотню мегабайт.
* Просто настраивается, просто кешируется.

=== Клиентская часть ===

==== initramfs ====
На уровне initramfs хотелось уметь:
* Понимать, что мы за сервер
* Грузить полноценную систему с использованием TCP, а не UDP

К этому моменту у нас есть ядро, а также те файлы, которые мы положили
в initramfs.

Нужно уметь работать с сетью и дисками, для этого нужны соответствующие модули
ядра. Их можно подгружать вручную, либо попробовать не глядя подгрузить все,
которые могут понадобиться. Отфильтровав все необходимые категории модулей,
удалось снизить размер на TODO мегабайт.

Место init в этой системе занял небольшой скрипт на ash (по возможностям —
урезанный bash, встроенный в busybox). Все остальные команды тоже добыли
из busybox.

==== Полноценная система ====
Полноценная система — запакованный tgz образ ОС, настроенной необходимым нам
образом. В ее основе — debootstrap, в который установлены необходимые пакеты
и отдельные файлы.

Классический init (или systemd, начиная с jessie) в ней предваряется небольшим
скриптом, который:
* Пытается импортировать настройки с дисков сервера
* Если настроек не удалось найти, применяет настройки по умолчанию на основе
адреса, выданного DHCP-сервером

=== Неверные предположения ===
Мы рассматривали возможность положить все необходимое в initramfs, но
прекратили эксперимент, когда добавление работающего ssh увеличило систему
в несколько раз.

=== Фичи ===

==== Псевдосетевая бездисковая загрузка ====
На основе того же образа было несложно реализовать бездисковую загрузку
сервера без использования PXE. Это полезно, например, если требуется
«отпустить» системный диск.

=== Применение ===

Мы перенастроили тысячи серверов с 32-битных ядер на 64-битные всего в две
перезагрузки. В классическом варианте потребовалось бы переустанавливать
ОС на них всех, либо существенно менять разметку дисков и ставить новую
систему «рядом» с основной, что весьма неудобно делать с нагруженными
серверами.

=== Планы ===
